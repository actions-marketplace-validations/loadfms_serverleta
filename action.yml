name: 'serverleta'
description: 'Compares CloudFormation plans generated by serveless projects and posts diff results as a comment in Pull Requests'
author: 'loadfms'
branding:
  icon: 'cloud'
  color: 'purple'
inputs:
  s3:
    description: 'S3 bucket where serverless-state will be stored.'
    required: true
    default: ''
  build:
    description: '(Optional) Command to build application.'
    required: false
    default: ''
runs:
  using: composite
  steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install awscli
      shell: bash
      run: |
        pip install awscli
        aws s3 cp s3://serverlessplans/serverless-state.json .

    - name: Build application
      shell: bash
      run: make build

    - name: Generate cloudformation
      uses: serverless/github-action@v3.1
      with:
        args: package -p new-plan
      env:
         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Saving cloudformation
      shell: bash
      run: cp new-plan/serverless-state.json new-serverless-state.json

    - name: Compare files
      shell: bash
      run: |
        diff -u serverless-state.json new-plan/serverless-state.json > result.txt || true

    - name: Create comment
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.TOKEN }}
        script: |
          const fs = require("fs");
          const buffer = fs.readFileSync("result.txt");
          const diff = buffer.toString();

          let splitted_diffs = diff.split("diff")

          const result = splitted_diffs.find(function(word) {
            return word.indexOf("serverless-state.json") !== -1;
          });

          if (result){
            const comment = "```"
            const commentheader = "```diff \n"
            const message = `${commentheader}${result}${comment}`

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            })
          }
